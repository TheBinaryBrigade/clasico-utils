"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const __1 = require("..");
const tests = {
    isNumber: {
        examples: [
            { input: 42, output: true },
            { input: 42.01, output: true },
            { input: Math.PI, output: true },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: false, output: false },
            { input: true, output: false },
            { input: new Boolean(true), output: false },
            { input: new Boolean(false), output: false },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isString: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: true },
            { input: "42e1000", output: true },
            { input: "padding42", output: true },
            { input: "42px", output: true },
            { input: " ", output: true },
            { input: "", output: true },
            { input: false, output: false },
            { input: true, output: false },
            { input: new Boolean(true), output: false },
            { input: new Boolean(false), output: false },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isBoolean: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: false, output: true },
            { input: true, output: true },
            { input: new Boolean(true), output: true },
            { input: new Boolean(false), output: true },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isFunction: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: true, output: false },
            { input: new Boolean(true), output: false },
            { input: new Boolean(false), output: false },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: true },
            { input: [1, 2][Symbol.iterator], output: true },
        ],
        returnType: "boolean",
    },
    isObject: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: true, output: false },
            { input: new Boolean(true), output: true },
            { input: new Boolean(false), output: true },
            { input: new Array([1]), output: true },
            { input: new Set([1]), output: true },
            { input: [1.42, 2.42, 3.42], output: true },
            { input: { hello: 42 }, output: true },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isNumeric: {
        examples: [
            { input: 42, output: true },
            { input: 42.01, output: true },
            { input: Math.PI, output: true },
            { input: "42", output: true },
            { input: "  42", output: true },
            { input: "42e1000", output: true },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: true, output: false },
            { input: new Boolean(true), output: false },
            { input: new Boolean(false), output: false },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isValidBoolean: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: "1", output: true },
            { input: "0", output: true },
            { input: "false", output: true },
            { input: "true", output: true },
            { input: false, output: true },
            { input: true, output: true },
            { input: new Boolean(true), output: true },
            { input: new Boolean(false), output: true },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isTrue: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: "1", output: true },
            { input: "0", output: false },
            { input: "false", output: false },
            { input: "true", output: true },
            { input: false, output: false },
            { input: true, output: true },
            { input: "false", output: false },
            { input: "true", output: true },
            { input: "  FALSE", output: false },
            { input: "  TRUE", output: true },
            { input: new Boolean(true), output: true },
            { input: new Boolean(false), output: false },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isFalse: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: "1", output: false },
            { input: "0", output: true },
            { input: "false", output: true },
            { input: "true", output: false },
            { input: false, output: true },
            { input: true, output: false },
            { input: new Boolean(true), output: false },
            { input: new Boolean(false), output: true },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isArray: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: true, output: false },
            { input: new Boolean(true), output: false },
            { input: new Boolean(false), output: false },
            { input: new Array([1]), output: true },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: true },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isSet: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: true, output: false },
            { input: new Boolean(true), output: false },
            { input: new Boolean(false), output: false },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: true },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isIterable: {
        examples: [
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: true },
            { input: "42e1000", output: true },
            { input: "padding42", output: true },
            { input: "42px", output: true },
            { input: " ", output: true },
            { input: "", output: true },
            { input: true, output: false },
            { input: new Boolean(true), output: false },
            { input: new Boolean(false), output: false },
            { input: new Array([1]), output: true },
            { input: new Set([1]), output: true },
            { input: [1.42, 2.42, 3.42], output: true },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean",
    },
    isDate: {
        examples: [
            // { input: 1641004800000, output: true },
            // { input: "2022-01-01", output: true },
            // { input: "1995-12-17T03:24:00", output: true },
            // { input: new Date(), output: true },
            // { input: new Date().toISOString(), output: true },
            // { input: `${new Date()}`, output: true },
            // { input: "04 Dec 1995 00:12:00 GMT", output: true },
            // { input: "01 Jan 1970 00:00:00 GMT", output: true },
            { input: 42, output: false },
            { input: 42.01, output: false },
            { input: Math.PI, output: false },
            { input: "42", output: false },
            { input: "42e1000", output: false },
            { input: "padding42", output: false },
            { input: "42px", output: false },
            { input: " ", output: false },
            { input: "", output: false },
            { input: true, output: false },
            { input: new Boolean(true), output: false },
            { input: new Boolean(false), output: false },
            { input: new Array([1]), output: false },
            { input: new Set([1]), output: false },
            { input: [1.42, 2.42, 3.42], output: false },
            { input: { hello: 42 }, output: false },
            { input: null, output: false },
            { input: undefined, output: false },
            { input: () => { return 42; }, output: false },
            { input: [1, 2][Symbol.iterator], output: false },
        ],
        returnType: "boolean"
    }
};
(0, globals_1.describe)("check", () => {
    Object.entries(tests).forEach(([fnName, { examples, returnType }]) => {
        (0, globals_1.describe)(fnName, () => {
            const call = __1.default[fnName];
            examples.forEach(({ input, output }) => {
                (0, globals_1.test)(`(${JSON.stringify(input)}) : (${typeof input})`, () => {
                    const result = call(input);
                    (0, globals_1.expect)(typeof result).toBe(returnType);
                    (0, globals_1.expect)(result).toBe(output);
                });
            });
        });
    });
});
